@include describe("box-process-single-value") {

  @each $orientation in $box-orientations {

    @include describe("with single united value") {
      @include it("should return that value") {
        @include should(
          expect(
            box-process-single-value(10px, $orientation)
          ),
          to( equal(
            10px
          ))
        );
      }
    }
  }

  // Errors
  // -----------------------------------------------------------------------------------------------

  @include describe("if multiple values are passed") {
    @include it("should throw a box-argument-count-error") {
      @include reset-errors();
      $result: box-process-arbitrary-value(margin-top, 1px 2px);
      @include should(
        expect(
          $box-last-error
        ),
        to( equal(
          $box-argument-count-error
        ))
      );
    }
  }

  @include describe("if a property is passed that isnt supported") {
    @include it("should throw a box-invalid-property-error") {
      @include reset-errors();
      $result: box-process-arbitrary-value(xxx, 1px);
      @include should(
        expect(
          $box-last-error
        ),
        to( equal(
          $box-invalid-property-error
        ))
      );
    }
  }

  @include describe("if a value is passed that isnt supported"){
    @include it("should throw a box-invalid-value-error") {
      @include reset-errors();
      $result: box-process-single-value(margin-top, xxx);
      @include should(
        expect(
          $box-last-error
        ),
        to( equal(
          $box-invalid-value-error
        ))
      );
    }
  }
}