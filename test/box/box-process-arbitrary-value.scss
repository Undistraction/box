@include describe("box-process-arbitrary-value") {

 @each $propery in $box-valid-single-properties {

   @include describe("with #{$propery} and single united value") {

      @include it("should return that value") {
        @include should(
          expect(
            box-process-arbitrary-value($propery, 10px)
          ),
          to( equal(
            10px
          ))
        );
      }
    }
  }

  @include describe("with multiple united values") {


    @each $propery in $box-valid-multiple-properties {

      @include describe("#{property} with a value of a") {

        @include it("should return a a a a") {
          @include should(
            expect(
              box-process-arbitrary-value($propery, 1px)
            ),
            to( equal(
              1px 1px 1px 1px
            ))
          );
        }
      }

      @include describe("#{property} with a value of a b") {

        @include it("should return a b a b") {
          @include should(
            expect(
              box-process-arbitrary-value($propery, 1px 2px)
            ),
            to( equal(
              1px 2px 1px 2px
            ))
          );
        }
      }

      @include describe("#{property} with a value of a b c") {

        @include it("should return a b c b") {
          @include should(
            expect(
              box-process-arbitrary-value($propery, 1px 2px 3px)
            ),
            to( equal(
              1px 2px 3px 2px
            ))
          );
        }
      }

      @include describe("#{property} with a value of a b c d") {

        @include it("should return a b c d") {
          @include should(
            expect(
              box-process-arbitrary-value($propery, 1px 2px 3px 4px)
            ),
            to( equal(
              1px 2px 3px 4px
            ))
          );
        }
      }
    }
  }

  // Supported Unitless values & calc
  // -----------------------------------------------------------------------------------------------

  @each $value in $box-valid-unitless-values {
    @include it("should support the unitless value") {
      @include should(
          expect(
            box-process-arbitrary-value(margin-top, $value)
          ),
          to( equal(
            $value
          ))
        );
    }
  }

  @include it("should support calc") {
    @include should(
        expect(
          box-process-arbitrary-value(margin-top, calc(1%+2px))
        ),
        to( equal(
          calc(1%+2px)
        ))
      );
  }

  // Errors
  // -----------------------------------------------------------------------------------------------

  @include describe("if a singular property is passed with multiple values") {
    @include it("should throw a box-argument-count-error") {
      @include reset-errors();
      $result: box-process-arbitrary-value(margin-top, 1px 2px);
      @include should(
        expect(
          $box-last-error
        ),
        to( equal(
          $box-argument-count-error
        ))
      );
    }
  }

  @include describe("if a property is passed that isnt supported") {
    @include it("should throw a box-invalid-property-error") {
      @include reset-errors();
      $result: box-process-arbitrary-value(xxx, 1px);
      @include should(
        expect(
          $box-last-error
        ),
        to( equal(
          $box-invalid-property-error
        ))
      );
    }
  }

  @include describe("if a value is passed that isnt supported") {
    @include it("should throw a box-invalid-value-error") {
      @include reset-errors();
      $result: box-process-arbitrary-value(margin-top, xxx);
      @include should(
        expect(
          $box-last-error
        ),
        to( equal(
          $box-invalid-value-error
        ))
      );
    }
  }

}